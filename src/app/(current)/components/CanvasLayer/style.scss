@use '@sass/config/vars' as v;
@use '@sass/utils/defs' as d;

.canvasLayer {
  @include d.flex($dir: row, $ali: center, $gap: 0);

  position: relative;

  justify-content: space-between;

  padding: 5px v.$padding;
  border: 3px solid transparent;
  border-radius: v.$radius;

  background-color: rgb(v.$bg2);

  &-hue {
    position: absolute;
    top: -5px;
    left: -10px;
    transform: rotateZ(-10deg);

    padding: 3px 10px;
    border: 2px solid rgb(v.$bg1);
    border-radius: 5px;

    background-color: rgb(v.$bg3);
  }

  &-see {
    padding: v.$padding 0;
  }

  &-viewer {
    @include d.flex($dir: row, $ali: center);

    pointer-events: visible;
    user-select: none;
    align-items: stretch;
  }

  &-title {
    position: relative;
    justify-content: center;
    width: 100px;
    height: 50px;

    @include d.flex;

    input {
      width: calc(100% - 30px);
      padding-left: 3px;
      background-color: transparent;
    }

    button {
      cursor: pointer;

      position: absolute;
      top: 50%;
      right: 5px;
      transform: translateY(-50%);

      display: block;

      height: 100%;
    }
  }

  &-image {
    cursor: pointer;

    width: 50px;
    min-width: 50px;
    height: 50px;
    min-height: 50px;
    border-radius: v.$radius;

    background-color: rgb(v.$bg1);

    img {
      width: 100%;
      height: 100%;
      object-fit: contain;
    }
  }

  &-alpha {
    padding: v.$padding 6px;
    border-radius: v.$radius;
    background-color: rgb(v.$bg1);
  }

  &-opacityController {
    position: absolute;
    z-index: 1;
    top: calc(100% + v.$padding);
    left: 0;

    @include d.flex;

    width: 100%;
    height: 100%;
    padding: 5px v.$padding;
    border: 3px solid rgb(v.$bg3);
    border-radius: v.$radius;

    background-color: rgb(v.$bg1);
    backdrop-filter: blur(5px);

    b {
      color: rgb(v.$fn1);
    }
  }

  &.hidden {
    border-color: rgb(v.$bg1);
    border-style: dashed;
    opacity: 0.7;
    background-color: transparent;
  }

  &.selected {
    border-color: rgb(v.$tn1);

    input {
      color: rgb(v.$fn1);
    }

    svg {
      stroke: rgb(v.$fn1);
    }

    .canvasLayer-hue {
      color: rgb(v.$fnA);
      background-color: rgb(v.$tn1);
    }
  }
}
